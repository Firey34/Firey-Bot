generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_CONN")
}

model members {
  id                                 String    @id @db.VarChar(100)
  username                           String
  rulesconfirmedon                   DateTime? @db.Timestamptz(6)
  points                             Int       @default(0)
  lastgrantedpoint                   DateTime  @default(now()) @db.Timestamp(6)
  modlog_modlog_moderatoridTomembers modlog[]  @relation("modlog_moderatoridTomembers")
  modlog_modlog_targetidTomembers    modlog[]  @relation("modlog_targetidTomembers")
  twitch                             twitch?
}

model twitch {
  id       String  @id @db.VarChar(100)
  memberid String  @unique @db.VarChar(100)
  username String
  verified Boolean @default(false)
  members  members @relation(fields: [memberid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_memberid")
}

model modlog {
  id                                  Int      @id @default(autoincrement())
  targetid                            String?  @db.VarChar(100)
  moderatorid                         String   @db.VarChar(100)
  action                              String
  reason                              String?
  timestamp                           DateTime @default(now()) @db.Timestamptz(6)
  metadata                            Json?    @db.Json
  members_modlog_moderatoridTomembers members  @relation("modlog_moderatoridTomembers", fields: [moderatorid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_moderatorid")
  members_modlog_targetidTomembers    members? @relation("modlog_targetidTomembers", fields: [targetid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_targetid")
}
